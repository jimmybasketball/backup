<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sfebiz.supplychain.persistence.base.route.dao.RegistRoutesLogDao">

<resultMap id="registRoutesLogDOResult" type="com.sfebiz.supplychain.persistence.base.route.domain.RegistRoutesLogDO">
    <result column="id" property="id"/>
    <result column="stockout_order_id" property="stockoutOrderId"/>
    <result column="intr_mail_no" property="intrMailNo"/>
    <result column="intr_carrier_code" property="intrCarrierCode"/>
    <result column="intl_mail_no" property="intlMailNo"/>
    <result column="intl_carrier_code" property="intlCarrierCode"/>
    <result column="is_success" property="isSuccess"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="gmt_modified" property="gmtModified"/>
</resultMap>

<sql id="registRoutesLogDO_columns">
    id,
    stockout_order_id,
    intr_mail_no,
    intr_carrier_code,
    intl_mail_no,
    intl_carrier_code,
    is_success,
    gmt_create,
    gmt_modified
</sql>

<sql id="registRoutesLogDO_sqlForInsert">
    id,
    stockout_order_id,
    intr_mail_no,
    intr_carrier_code,
    intl_mail_no,
    intl_carrier_code,
    is_success,
    gmt_create,
    gmt_modified
</sql>

<sql id="registRoutesLogDO_columnsForInsert">
    #{id},
    #{stockoutOrderId},
    #{intrMailNo},
    #{intrCarrierCode},
    #{intlMailNo},
    #{intlCarrierCode},
    #{isSuccess},
    now(),
    now()
</sql>

<sql id="registRoutesLogDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="stockoutOrderId != null">
            stockout_order_id = #{stockoutOrderId},
        </if>
        <if test="intrMailNo != null">
            intr_mail_no = #{intrMailNo},
        </if>
        <if test="intrCarrierCode != null">
            intr_carrier_code = #{intrCarrierCode},
        </if>
        <if test="intlMailNo != null">
            intl_mail_no = #{intlMailNo},
        </if>
        <if test="intlCarrierCode != null">
            intl_carrier_code = #{intlCarrierCode},
        </if>
        <if test="isSuccess != null">
            is_success = #{isSuccess},
        </if>
    </set>
</sql>

<sql id="registRoutesLogDO_selector">
    select
    <include refid="registRoutesLogDO_columns"/>
    from sc_regist_routes_log
</sql>

<sql id="registRoutesLogDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.stockoutOrderId != null">
            AND stockout_order_id = #{data.stockoutOrderId}
        </if>
        <if test="data.intrMailNo != null">
            AND intr_mail_no = #{data.intrMailNo}
        </if>
        <if test="data.intrCarrierCode != null">
            AND intr_carrier_code = #{data.intrCarrierCode}
        </if>
        <if test="data.intlMailNo != null">
            AND intl_mail_no = #{data.intlMailNo}
        </if>
        <if test="data.intlCarrierCode != null">
            AND intl_carrier_code = #{data.intlCarrierCode}
        </if>
        <if test="data.isSuccess != null">
            AND is_success = #{data.isSuccess}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="ins != null and ins != ''">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null and notIns != ''">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="lts != null and lts != ''">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null and gts != ''">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null and ltes != ''">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null and gtes != ''">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null and ranges != ''">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.route.domain.RegistRoutesLogDO">
    insert into sc_regist_routes_log
    (
        <include refid="registRoutesLogDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="registRoutesLogDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="com.sfebiz.supplychain.persistence.base.route.domain.RegistRoutesLogDO">
    update sc_regist_routes_log
    <include refid="registRoutesLogDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="com.sfebiz.supplychain.persistence.base.route.domain.RegistRoutesLogDO">
    update sc_regist_routes_log
    <set>
        gmt_modified = now(),
        <if test="update.stockoutOrderId != null">
            stockout_order_id = #{update.stockoutOrderId},
        </if>
        <if test="update.intrMailNo != null">
            intr_mail_no = #{update.intrMailNo},
        </if>
        <if test="update.intrCarrierCode != null">
            intr_carrier_code = #{update.intrCarrierCode},
        </if>
        <if test="update.intlMailNo != null">
            intl_mail_no = #{update.intlMailNo},
        </if>
        <if test="update.intlCarrierCode != null">
            intl_carrier_code = #{update.intlCarrierCode},
        </if>
        <if test="update.isSuccess != null">
            is_success = #{update.isSuccess},
        </if>
    </set>
    <include refid="registRoutesLogDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.route.domain.RegistRoutesLogDO">
    insert into sc_regist_routes_log
    (
        <include refid="registRoutesLogDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="registRoutesLogDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    ,is_delete = 0
    <if test="stockoutOrderId != null">
        ,stockout_order_id = #{stockoutOrderId}
    </if>
    <if test="intrMailNo != null">
        ,intr_mail_no = #{intrMailNo}
    </if>
    <if test="intrCarrierCode != null">
        ,intr_carrier_code = #{intrCarrierCode}
    </if>
    <if test="intlMailNo != null">
        ,intl_mail_no = #{intlMailNo}
    </if>
    <if test="intlCarrierCode != null">
        ,intl_carrier_code = #{intlCarrierCode}
    </if>
    <if test="isSuccess != null">
        ,is_success = #{isSuccess}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update sc_regist_routes_log
    set is_delete = 1, gmt_modified = now()
    <include refid="registRoutesLogDO_query_segment"/>
</update>
<update id="deleteById">
    update sc_regist_routes_log
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="registRoutesLogDO_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="registRoutesLogDO_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="registRoutesLogDOResult" parameterType="com.sfebiz.supplychain.persistence.base.route.domain.RegistRoutesLogDO">
    <include refid="registRoutesLogDO_selector"/>
    <include refid="registRoutesLogDO_query_segment"/>
    <include refid="registRoutesLogDO_groupBy"/>
    <include refid="registRoutesLogDO_orderby"/>
</select>

<select id="query4Page" resultMap="registRoutesLogDOResult" parameterType="com.sfebiz.supplychain.persistence.base.route.domain.RegistRoutesLogDO">
    <include refid="registRoutesLogDO_selector"/>
    <include refid="registRoutesLogDO_query_segment"/>
    <include refid="registRoutesLogDO_groupBy"/>
    <include refid="registRoutesLogDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM sc_regist_routes_log
    <include refid="registRoutesLogDO_query_segment"/>
</select>

<select id="getById" resultMap="registRoutesLogDOResult">
    <include refid="registRoutesLogDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="registRoutesLogDOResult">
    <include refid="registRoutesLogDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

</mapper>
