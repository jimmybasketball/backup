<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sfebiz.supplychain.persistence.base.sku.dao.ProductDeclareQdDirectmailDao">

<resultMap id="productDeclareQdDirectmailDOResult" type="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareQdDirectmailDO">
    <result column="product_declare_id" property="productDeclareId"/>
    <result column="secondary_measuring_unit" property="secondaryMeasuringUnit"/>
    <result column="data_collect_user" property="dataCollectUser"/>
    <result column="manufacturer" property="manufacturer"/>
    <result column="third_sku_id" property="thirdSkuId"/>
    <result column="sku_quality" property="skuQuality"/>
    <result column="create_user" property="createUser"/>
    <result column="filing_user" property="filingUser"/>
    <result column="provider_name" property="providerName"/>
    <result column="purchase_mode" property="purchaseMode"/>
    <result column="id" property="id"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="gmt_modified" property="gmtModified"/>
</resultMap>

<sql id="productDeclareQdDirectmailDO_columns">
    product_declare_id,
    secondary_measuring_unit,
    data_collect_user,
    manufacturer,
    third_sku_id,
    sku_quality,
    create_user,
    filing_user,
    provider_name,
    purchase_mode,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="productDeclareQdDirectmailDO_sqlForInsert">
    product_declare_id,
    secondary_measuring_unit,
    data_collect_user,
    manufacturer,
    third_sku_id,
    sku_quality,
    create_user,
    filing_user,
    provider_name,
    purchase_mode,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="productDeclareQdDirectmailDO_columnsForInsert">
    #{productDeclareId},
    #{secondaryMeasuringUnit},
    #{dataCollectUser},
    #{manufacturer},
    #{thirdSkuId},
    #{skuQuality},
    #{createUser},
    #{filingUser},
    #{providerName},
    #{purchaseMode},
    #{id},
    now(),
    now()
</sql>

<sql id="productDeclareQdDirectmailDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="productDeclareId != null">
            product_declare_id = #{productDeclareId},
        </if>
        <if test="secondaryMeasuringUnit != null">
            secondary_measuring_unit = #{secondaryMeasuringUnit},
        </if>
        <if test="dataCollectUser != null">
            data_collect_user = #{dataCollectUser},
        </if>
        <if test="manufacturer != null">
            manufacturer = #{manufacturer},
        </if>
        <if test="thirdSkuId != null">
            third_sku_id = #{thirdSkuId},
        </if>
        <if test="skuQuality != null">
            sku_quality = #{skuQuality},
        </if>
        <if test="createUser != null">
            create_user = #{createUser},
        </if>
        <if test="filingUser != null">
            filing_user = #{filingUser},
        </if>
        <if test="providerName != null">
            provider_name = #{providerName},
        </if>
        <if test="purchaseMode != null">
            purchase_mode = #{purchaseMode},
        </if>
    </set>
</sql>

<sql id="productDeclareQdDirectmailDO_selector">
    select
    <include refid="productDeclareQdDirectmailDO_columns"/>
    from sc_product_declare_qd_directmail
</sql>

<sql id="productDeclareQdDirectmailDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.productDeclareId != null">
            AND product_declare_id = #{data.productDeclareId}
        </if>
        <if test="data.secondaryMeasuringUnit != null">
            AND secondary_measuring_unit = #{data.secondaryMeasuringUnit}
        </if>
        <if test="data.dataCollectUser != null">
            AND data_collect_user = #{data.dataCollectUser}
        </if>
        <if test="data.manufacturer != null">
            AND manufacturer = #{data.manufacturer}
        </if>
        <if test="data.thirdSkuId != null">
            AND third_sku_id = #{data.thirdSkuId}
        </if>
        <if test="data.skuQuality != null">
            AND sku_quality = #{data.skuQuality}
        </if>
        <if test="data.createUser != null">
            AND create_user = #{data.createUser}
        </if>
        <if test="data.filingUser != null">
            AND filing_user = #{data.filingUser}
        </if>
        <if test="data.providerName != null">
            AND provider_name = #{data.providerName}
        </if>
        <if test="data.purchaseMode != null">
            AND purchase_mode = #{data.purchaseMode}
        </if>
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="ins != null and ins != ''">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null and notIns != ''">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="lts != null and lts != ''">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null and gts != ''">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null and ltes != ''">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null and gtes != ''">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null and ranges != ''">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareQdDirectmailDO">
    insert into sc_product_declare_qd_directmail
    (
        <include refid="productDeclareQdDirectmailDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="productDeclareQdDirectmailDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareQdDirectmailDO">
    update sc_product_declare_qd_directmail
    <include refid="productDeclareQdDirectmailDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareQdDirectmailDO">
    update sc_product_declare_qd_directmail
    <set>
        gmt_modified = now(),
        <if test="update.productDeclareId != null">
            product_declare_id = #{update.productDeclareId},
        </if>
        <if test="update.secondaryMeasuringUnit != null">
            secondary_measuring_unit = #{update.secondaryMeasuringUnit},
        </if>
        <if test="update.dataCollectUser != null">
            data_collect_user = #{update.dataCollectUser},
        </if>
        <if test="update.manufacturer != null">
            manufacturer = #{update.manufacturer},
        </if>
        <if test="update.thirdSkuId != null">
            third_sku_id = #{update.thirdSkuId},
        </if>
        <if test="update.skuQuality != null">
            sku_quality = #{update.skuQuality},
        </if>
        <if test="update.createUser != null">
            create_user = #{update.createUser},
        </if>
        <if test="update.filingUser != null">
            filing_user = #{update.filingUser},
        </if>
        <if test="update.providerName != null">
            provider_name = #{update.providerName},
        </if>
        <if test="update.purchaseMode != null">
            purchase_mode = #{update.purchaseMode},
        </if>
    </set>
    <include refid="productDeclareQdDirectmailDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareQdDirectmailDO">
    insert into sc_product_declare_qd_directmail
    (
        <include refid="productDeclareQdDirectmailDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="productDeclareQdDirectmailDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    ,is_delete = 0
    <if test="productDeclareId != null">
        ,product_declare_id = #{productDeclareId}
    </if>
    <if test="secondaryMeasuringUnit != null">
        ,secondary_measuring_unit = #{secondaryMeasuringUnit}
    </if>
    <if test="dataCollectUser != null">
        ,data_collect_user = #{dataCollectUser}
    </if>
    <if test="manufacturer != null">
        ,manufacturer = #{manufacturer}
    </if>
    <if test="thirdSkuId != null">
        ,third_sku_id = #{thirdSkuId}
    </if>
    <if test="skuQuality != null">
        ,sku_quality = #{skuQuality}
    </if>
    <if test="createUser != null">
        ,create_user = #{createUser}
    </if>
    <if test="filingUser != null">
        ,filing_user = #{filingUser}
    </if>
    <if test="providerName != null">
        ,provider_name = #{providerName}
    </if>
    <if test="purchaseMode != null">
        ,purchase_mode = #{purchaseMode}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update sc_product_declare_qd_directmail
    set is_delete = 1, gmt_modified = now()
    <include refid="productDeclareQdDirectmailDO_query_segment"/>
</update>
<update id="deleteById">
    update sc_product_declare_qd_directmail
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="productDeclareQdDirectmailDO_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="productDeclareQdDirectmailDO_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="productDeclareQdDirectmailDOResult" parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareQdDirectmailDO">
    <include refid="productDeclareQdDirectmailDO_selector"/>
    <include refid="productDeclareQdDirectmailDO_query_segment"/>
    <include refid="productDeclareQdDirectmailDO_groupBy"/>
    <include refid="productDeclareQdDirectmailDO_orderby"/>
</select>

<select id="query4Page" resultMap="productDeclareQdDirectmailDOResult" parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareQdDirectmailDO">
    <include refid="productDeclareQdDirectmailDO_selector"/>
    <include refid="productDeclareQdDirectmailDO_query_segment"/>
    <include refid="productDeclareQdDirectmailDO_groupBy"/>
    <include refid="productDeclareQdDirectmailDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM sc_product_declare_qd_directmail
    <include refid="productDeclareQdDirectmailDO_query_segment"/>
</select>

<select id="getById" resultMap="productDeclareQdDirectmailDOResult">
    <include refid="productDeclareQdDirectmailDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="productDeclareQdDirectmailDOResult">
    <include refid="productDeclareQdDirectmailDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

    <select id="getByProductDeclareId" resultMap="productDeclareQdDirectmailDOResult" parameterType="java.lang.Long">
        <include refid="productDeclareQdDirectmailDO_selector"/>
        where product_declare_id = #{productDeclareId}
        and is_delete = 0
    </select>

</mapper>
