<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sfebiz.supplychain.persistence.base.sku.dao.ProductDeclareGzDirectmailDao">

    <resultMap id="productDeclareGzDirectmailDOResult"
               type="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareGzDirectmailDO">
        <result column="product_declare_id" property="productDeclareId"/>
        <result column="manufacturer" property="manufacturer"/>
        <result column="third_sku_id" property="thirdSkuId"/>
        <result column="secondary_measuring_unit" property="secondaryMeasuringUnit"/>
        <result column="sku_quality" property="skuQuality"/>
        <result column="create_user" property="createUser"/>
        <result column="data_collect_user" property="dataCollectUser"/>
        <result column="filing_user" property="filingUser"/>
        <result column="provider_name" property="providerName"/>
        <result column="purchase_mode" property="purchaseMode"/>
        <result column="id" property="id"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
    </resultMap>

    <sql id="productDeclareGzDirectmailDO_columns">
        product_declare_id,
        manufacturer,
        third_sku_id,
        secondary_measuring_unit,
        sku_quality,
        create_user,
        data_collect_user,
        filing_user,
        provider_name,
        purchase_mode,
        id,
        gmt_create,
        gmt_modified
    </sql>

    <sql id="productDeclareGzDirectmailDO_sqlForInsert">
        product_declare_id,
        manufacturer,
        third_sku_id,
        secondary_measuring_unit,
        sku_quality,
        create_user,
        data_collect_user,
        filing_user,
        provider_name,
        purchase_mode,
        id,
        gmt_create,
        gmt_modified
    </sql>

    <sql id="productDeclareGzDirectmailDO_columnsForInsert">
        #{productDeclareId},
        #{manufacturer},
        #{thirdSkuId},
        #{secondaryMeasuringUnit},
        #{skuQuality},
        #{createUser},
        #{dataCollectUser},
        #{filingUser},
        #{providerName},
        #{purchaseMode},
        #{id},
        now(),
        now()
    </sql>

    <sql id="productDeclareGzDirectmailDO_setterForUpdate">
        <set>
            gmt_modified = now(),
            <if test="productDeclareId != null">
                product_declare_id = #{productDeclareId},
            </if>
            <if test="manufacturer != null">
                manufacturer = #{manufacturer},
            </if>
            <if test="thirdSkuId != null">
                third_sku_id = #{thirdSkuId},
            </if>
            <if test="secondaryMeasuringUnit != null">
                secondary_measuring_unit = #{secondaryMeasuringUnit},
            </if>
            <if test="skuQuality != null">
                sku_quality = #{skuQuality},
            </if>
            <if test="createUser != null">
                create_user = #{createUser},
            </if>
            <if test="dataCollectUser != null">
                data_collect_user = #{dataCollectUser},
            </if>
            <if test="filingUser != null">
                filing_user = #{filingUser},
            </if>
            <if test="providerName != null">
                provider_name = #{providerName},
            </if>
            <if test="purchaseMode != null">
                purchase_mode = #{purchaseMode},
            </if>
            <if test="id != null">
                id = #{id},
            </if>
        </set>
    </sql>

    <sql id="productDeclareGzDirectmailDO_selector">
        select
        <include refid="productDeclareGzDirectmailDO_columns"/>
        from sc_product_declare_gz_directmail
    </sql>

    <sql id="productDeclareGzDirectmailDO_query_segment">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="data.productDeclareId != null">
                AND product_declare_id = #{data.productDeclareId}
            </if>
            <if test="data.manufacturer != null">
                AND manufacturer = #{data.manufacturer}
            </if>
            <if test="data.thirdSkuId != null">
                AND third_sku_id = #{data.thirdSkuId}
            </if>
            <if test="data.secondaryMeasuringUnit != null">
                AND secondary_measuring_unit = #{data.secondaryMeasuringUnit}
            </if>
            <if test="data.skuQuality != null">
                AND sku_quality = #{data.skuQuality}
            </if>
            <if test="data.createUser != null">
                AND create_user = #{data.createUser}
            </if>
            <if test="data.dataCollectUser != null">
                AND data_collect_user = #{data.dataCollectUser}
            </if>
            <if test="data.filingUser != null">
                AND filing_user = #{data.filingUser}
            </if>
            <if test="data.providerName != null">
                AND provider_name = #{data.providerName}
            </if>
            <if test="data.purchaseMode != null">
                AND purchase_mode = #{data.purchaseMode}
            </if>
            <if test="data.id != null">
                AND id = #{data.id}
            </if>
            <if test="data.gmtCreate != null">
                AND gmt_create = #{data.gmtCreate}
            </if>
            <if test="data.gmtModified != null">
                AND gmt_modified = #{data.gmtModified}
            </if>
            <if test="ins != null and ins != ''">
                AND
                <foreach collection="ins" item="item" open="(" separator="and" close=")">
                    ${item.column} in
                    <foreach collection="item.values" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </foreach>
            </if>
            <if test="notIns != null and notIns != ''">
                AND
                <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                    ${item.column} not in
                    <foreach collection="item.values" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </foreach>
            </if>
            <if test="equals != null and equals != ''">
                AND
                <foreach collection="equals" item="item" open="(" separator="and" close=")">
                    ${item.column} = #{item.value}
                </foreach>
            </if>
            <if test="notEquals != null and notEquals != ''">
                AND
                <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                    ${item.column} = #{item.value}
                </foreach>
            </if>
            <if test="lts != null and lts != ''">
                AND
                <foreach collection="lts" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ < ]]> #{item.value}
                </foreach>
            </if>
            <if test="gts != null and gts != ''">
                AND
                <foreach collection="gts" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ > ]]> #{item.value}
                </foreach>
            </if>
            <if test="likes != null and likes != ''">
                AND
                <foreach collection="likes" item="item" open="(" separator="and" close=")">
                    ${item.column} like concat('%', #{item.value}, '%')
                </foreach>
            </if>
            <if test="ltes != null and ltes != ''">
                AND
                <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ <= ]]> #{item.value}
                </foreach>
            </if>
            <if test="gtes != null and gtes != ''">
                AND
                <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ >= ]]> #{item.value}
                </foreach>
            </if>
            <if test="ranges != null and ranges != ''">
                AND
                <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                    ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
                </foreach>
            </if>
            AND is_delete = 0
        </trim>
    </sql>


    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareGzDirectmailDO">
        insert into sc_product_declare_gz_directmail
        (
        <include refid="productDeclareGzDirectmailDO_sqlForInsert"/>
        ,is_delete
        )
        values
        (
        <include refid="productDeclareGzDirectmailDO_columnsForInsert"/>
        ,0
        )
    </insert>

    <update id="update" parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareGzDirectmailDO">
        update sc_product_declare_gz_directmail
        <include refid="productDeclareGzDirectmailDO_setterForUpdate"/>
        where id = #{id}
        and is_delete = 0
    </update>


    <update id="updateByQuery" parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareGzDirectmailDO">
        update sc_product_declare_gz_directmail
        <set>
            gmt_modified = now(),
            <if test="update.productDeclareId != null">
                product_declare_id = #{update.productDeclareId},
            </if>
            <if test="update.manufacturer != null">
                manufacturer = #{update.manufacturer},
            </if>
            <if test="update.thirdSkuId != null">
                third_sku_id = #{update.thirdSkuId},
            </if>
            <if test="update.secondaryMeasuringUnit != null">
                secondary_measuring_unit = #{update.secondaryMeasuringUnit},
            </if>
            <if test="update.skuQuality != null">
                sku_quality = #{update.skuQuality},
            </if>
            <if test="update.createUser != null">
                create_user = #{update.createUser},
            </if>
            <if test="update.dataCollectUser != null">
                data_collect_user = #{update.dataCollectUser},
            </if>
            <if test="update.filingUser != null">
                filing_user = #{update.filingUser},
            </if>
            <if test="update.providerName != null">
                provider_name = #{update.providerName},
            </if>
            <if test="update.purchaseMode != null">
                purchase_mode = #{update.purchaseMode},
            </if>
            <if test="update.id != null">
                id = #{update.id},
            </if>
        </set>
        <include refid="productDeclareGzDirectmailDO_query_segment"/>
    </update>


    <insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareGzDirectmailDO">
        insert into sc_product_declare_gz_directmail
        (
        <include refid="productDeclareGzDirectmailDO_sqlForInsert"/>
        ,is_delete
        )
        values
        (
        <include refid="productDeclareGzDirectmailDO_columnsForInsert"/>
        ,0
        )
        on duplicate key update
        gmt_modified = now()
        ,is_delete = 0
        <if test="productDeclareId != null">
            ,product_declare_id = #{productDeclareId}
        </if>
        <if test="manufacturer != null">
            ,manufacturer = #{manufacturer}
        </if>
        <if test="thirdSkuId != null">
            ,third_sku_id = #{thirdSkuId}
        </if>
        <if test="secondaryMeasuringUnit != null">
            ,secondary_measuring_unit = #{secondaryMeasuringUnit}
        </if>
        <if test="skuQuality != null">
            ,sku_quality = #{skuQuality}
        </if>
        <if test="createUser != null">
            ,create_user = #{createUser}
        </if>
        <if test="dataCollectUser != null">
            ,data_collect_user = #{dataCollectUser}
        </if>
        <if test="filingUser != null">
            ,filing_user = #{filingUser}
        </if>
        <if test="providerName != null">
            ,provider_name = #{providerName}
        </if>
        <if test="purchaseMode != null">
            ,purchase_mode = #{purchaseMode}
        </if>
    </insert>

    <!-- Delete -->
    <update id="delete">
        update sc_product_declare_gz_directmail
        set is_delete = 1, gmt_modified = now()
        <include refid="productDeclareGzDirectmailDO_query_segment"/>
    </update>
    <update id="deleteById">
        update sc_product_declare_gz_directmail
        set is_delete = 1, gmt_modified = now()
        where id = #{id}
    </update>


    <!-- query class -->
    <sql id="productDeclareGzDirectmailDO_groupBy">
        <if test="groupBys != null and groupBys != ''">
            group by
            <foreach collection="groupBys" item="item" open="" separator="," close="">
                #{item}
            </foreach>
        </if>
    </sql>

    <sql id="productDeclareGzDirectmailDO_orderby">
        <if test="orderBys != null and orderBys != ''">
            order by
            <foreach collection="orderBys" item="item" open="" separator="," close="">
                ${item.column} ${item.direction}
            </foreach>
        </if>
    </sql>


    <select id="query" resultMap="productDeclareGzDirectmailDOResult"
            parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareGzDirectmailDO">
        <include refid="productDeclareGzDirectmailDO_selector"/>
        <include refid="productDeclareGzDirectmailDO_query_segment"/>
        <include refid="productDeclareGzDirectmailDO_groupBy"/>
        <include refid="productDeclareGzDirectmailDO_orderby"/>
    </select>

    <select id="query4Page" resultMap="productDeclareGzDirectmailDOResult"
            parameterType="com.sfebiz.supplychain.persistence.base.sku.domain.ProductDeclareGzDirectmailDO">
        <include refid="productDeclareGzDirectmailDO_selector"/>
        <include refid="productDeclareGzDirectmailDO_query_segment"/>
        <include refid="productDeclareGzDirectmailDO_groupBy"/>
        <include refid="productDeclareGzDirectmailDO_orderby"/>
        limit ${startRowForMysql}, ${pageSize}
    </select>


    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) FROM sc_product_declare_gz_directmail
        <include refid="productDeclareGzDirectmailDO_query_segment"/>
    </select>

    <select id="getById" resultMap="productDeclareGzDirectmailDOResult">
        <include refid="productDeclareGzDirectmailDO_selector"/>
        where id = #{id}
        and is_delete = 0
    </select>

    <select id="getByIdForUpdate" resultMap="productDeclareGzDirectmailDOResult">
        <include refid="productDeclareGzDirectmailDO_selector"/>
        where id = #{id}
        and is_delete = 0
        for update
    </select>

    <select id="getByProductDeclareId" resultMap="productDeclareGzDirectmailDOResult" parameterType="java.lang.Long">
        <include refid="productDeclareGzDirectmailDO_selector"/>
        where product_declare_id = #{productDeclareId}
        and is_delete = 0
    </select>

</mapper>
