<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sfebiz.supplychain.persistence.base.merchant.dao.MerchantProviderLineDao">

<resultMap id="merchantProviderLineDOResult" type="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantProviderLineDO">
    <result column="id" property="id"/>
    <result column="state" property="state"/>
    <result column="merchant_provider_id" property="merchantProviderId"/>
    <result column="line_id" property="lineId"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="create_by" property="createBy"/>
    <result column="gmt_modified" property="gmtModified"/>
    <result column="modified_by" property="modifiedBy"/>
</resultMap>

<sql id="merchantProviderLineDO_columns">
    id,
    state,
    merchant_provider_id,
    line_id,
    gmt_create,
    create_by,
    gmt_modified,
    modified_by
</sql>

<sql id="merchantProviderLineDO_sqlForInsert">
    id,
    state,
    merchant_provider_id,
    line_id,
    gmt_create,
    create_by,
    gmt_modified,
    modified_by
</sql>

<sql id="merchantProviderLineDO_columnsForInsert">
    #{id},
    #{state},
    #{merchantProviderId},
    #{lineId},
    now(),
    #{createBy},
    now(),
    #{modifiedBy}
</sql>

<sql id="merchantProviderLineDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="state != null">
            state = #{state},
        </if>
        <if test="merchantProviderId != null">
            merchant_provider_id = #{merchantProviderId},
        </if>
        <if test="lineId != null">
            line_id = #{lineId},
        </if>
        <if test="createBy != null">
            create_by = #{createBy},
        </if>
        <if test="modifiedBy != null">
            modified_by = #{modifiedBy},
        </if>
    </set>
</sql>

<sql id="merchantProviderLineDO_selector">
    select
    <include refid="merchantProviderLineDO_columns"/>
    from sc_merchant_provider_line
</sql>

<sql id="merchantProviderLineDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.state != null">
            AND state = #{data.state}
        </if>
        <if test="data.merchantProviderId != null">
            AND merchant_provider_id = #{data.merchantProviderId}
        </if>
        <if test="data.lineId != null">
            AND line_id = #{data.lineId}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.createBy != null">
            AND create_by = #{data.createBy}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="data.modifiedBy != null">
            AND modified_by = #{data.modifiedBy}
        </if>
        <if test="ins != null and ins != ''">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null and notIns != ''">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="lts != null and lts != ''">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null and gts != ''">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null and ltes != ''">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null and gtes != ''">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null and ranges != ''">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>

    <select id="getByProviderAndWarehouse" parameterType="java.util.HashMap" resultMap="merchantProviderLineDOResult">
        SELECT line.* FROM sc_merchant_provider_line line LEFT JOIN sc_merchant_provider provider on line.merchant_provider_id = provider.id
        WHERE line.merchant_provider_id = #{providerId}
				and provider.merchant_id = #{merchantId}
        AND line.line_id IN (
	      SELECT sc_logistics_line.id FROM sc_logistics_line WHERE sc_logistics_line.warehouse_id = #{warehouseId}
	    )and line.is_delete = 0 and line.state = 'ENABLE';
    </select>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantProviderLineDO">
    insert into sc_merchant_provider_line
    (
        <include refid="merchantProviderLineDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="merchantProviderLineDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantProviderLineDO">
    update sc_merchant_provider_line
    <include refid="merchantProviderLineDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantProviderLineDO">
    update sc_merchant_provider_line
    <set>
        gmt_modified = now(),
        <if test="update.state != null">
            state = #{update.state},
        </if>
        <if test="update.merchantProviderId != null">
            merchant_provider_id = #{update.merchantProviderId},
        </if>
        <if test="update.lineId != null">
            line_id = #{update.lineId},
        </if>
        <if test="update.createBy != null">
            create_by = #{update.createBy},
        </if>
        <if test="update.modifiedBy != null">
            modified_by = #{update.modifiedBy},
        </if>
    </set>
    <include refid="merchantProviderLineDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantProviderLineDO">
    insert into sc_merchant_provider_line
    (
        <include refid="merchantProviderLineDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="merchantProviderLineDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    ,is_delete = 0
    <if test="state != null">
        ,state = #{state}
    </if>
    <if test="merchantProviderId != null">
        ,merchant_provider_id = #{merchantProviderId}
    </if>
    <if test="lineId != null">
        ,line_id = #{lineId}
    </if>
    <if test="createBy != null">
        ,create_by = #{createBy}
    </if>
    <if test="modifiedBy != null">
        ,modified_by = #{modifiedBy}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update sc_merchant_provider_line
    set is_delete = 1, gmt_modified = now()
    <include refid="merchantProviderLineDO_query_segment"/>
</update>
<update id="deleteById">
    update sc_merchant_provider_line
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="merchantProviderLineDO_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="merchantProviderLineDO_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="merchantProviderLineDOResult" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantProviderLineDO">
    <include refid="merchantProviderLineDO_selector"/>
    <include refid="merchantProviderLineDO_query_segment"/>
    <include refid="merchantProviderLineDO_groupBy"/>
    <include refid="merchantProviderLineDO_orderby"/>
</select>

<select id="query4Page" resultMap="merchantProviderLineDOResult" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantProviderLineDO">
    <include refid="merchantProviderLineDO_selector"/>
    <include refid="merchantProviderLineDO_query_segment"/>
    <include refid="merchantProviderLineDO_groupBy"/>
    <include refid="merchantProviderLineDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM sc_merchant_provider_line
    <include refid="merchantProviderLineDO_query_segment"/>
</select>

<select id="getById" resultMap="merchantProviderLineDOResult">
    <include refid="merchantProviderLineDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="merchantProviderLineDOResult">
    <include refid="merchantProviderLineDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

</mapper>
