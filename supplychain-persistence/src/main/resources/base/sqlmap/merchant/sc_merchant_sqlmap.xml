<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sfebiz.supplychain.persistence.base.merchant.dao.MerchantDao">

<resultMap id="merchantDOResult" type="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantDO">
    <result column="name" property="name"/>
    <result column="id" property="id"/>
    <result column="state" property="state"/>
    <result column="merchant_account_id" property="merchantAccountId"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="create_by" property="createBy"/>
    <result column="gmt_modified" property="gmtModified"/>
    <result column="modified_by" property="modifiedBy"/>
    <result column="enterprise_name" property="enterpriseName"/>
    <result column="enterprise_address" property="enterpriseAddress"/>
    <result column="business_license_no" property="businessLicenseNo"/>
    <result column="legal_representative" property="legalRepresentative"/>
    <result column="linkman" property="linkman"/>
    <result column="linkman_email" property="linkmanEmail"/>
    <result column="cell_phone_number" property="cellPhoneNumber"/>
    <result column="landline_telephone" property="landlineTelephone"/>
</resultMap>

<sql id="merchantDO_columns">
    name,
    id,
    state,
    merchant_account_id,
    gmt_create,
    create_by,
    gmt_modified,
    modified_by,
    enterprise_name,
    enterprise_address,
    business_license_no,
    legal_representative,
    linkman,
    linkman_email,
    cell_phone_number,
    landline_telephone
</sql>

<sql id="merchantDO_sqlForInsert">
    name,
    id,
    state,
    merchant_account_id,
    gmt_create,
    create_by,
    gmt_modified,
    modified_by,
    enterprise_name,
    enterprise_address,
    business_license_no,
    legal_representative,
    linkman,
    linkman_email,
    cell_phone_number,
    landline_telephone
</sql>

<sql id="merchantDO_columnsForInsert">
    #{name},
    #{id},
    #{state},
    #{merchantAccountId},
    now(),
    #{createBy},
    now(),
    #{modifiedBy},
    #{enterpriseName},
    #{enterpriseAddress},
    #{businessLicenseNo},
    #{legalRepresentative},
    #{linkman},
    #{linkmanEmail},
    #{cellPhoneNumber},
    #{landlineTelephone}
</sql>

<sql id="merchantDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="name != null">
            name = #{name},
        </if>
        <if test="state != null">
            state = #{state},
        </if>
        <if test="merchantAccountId != null">
            merchant_account_id = #{merchantAccountId},
        </if>
        <if test="createBy != null">
            create_by = #{createBy},
        </if>
        <if test="modifiedBy != null">
            modified_by = #{modifiedBy},
        </if>
        <if test="enterpriseName != null">
            enterprise_name = #{enterpriseName},
        </if>
        <if test="enterpriseAddress != null">
            enterprise_address = #{enterpriseAddress},
        </if>
        <if test="businessLicenseNo != null">
            business_license_no = #{businessLicenseNo},
        </if>
        <if test="legalRepresentative != null">
            legal_representative = #{legalRepresentative},
        </if>
        <if test="linkman != null">
            linkman = #{linkman},
        </if>
        <if test="linkmanEmail != null">
            linkman_email = #{linkmanEmail},
        </if>
        <if test="cellPhoneNumber != null">
            cell_phone_number = #{cellPhoneNumber},
        </if>
        <if test="landlineTelephone != null">
            landline_telephone = #{landlineTelephone},
        </if>
    </set>
</sql>

<sql id="merchantDO_selector">
    select
    <include refid="merchantDO_columns"/>
    from sc_merchant
</sql>

<sql id="merchantDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.name != null">
            AND name = #{data.name}
        </if>
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.state != null">
            AND state = #{data.state}
        </if>
        <if test="data.merchantAccountId != null">
            AND merchant_account_id = #{data.merchantAccountId}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.createBy != null">
            AND create_by = #{data.createBy}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="data.modifiedBy != null">
            AND modified_by = #{data.modifiedBy}
        </if>
        <if test="data.enterpriseName != null">
            AND enterprise_name = #{data.enterpriseName}
        </if>
        <if test="data.enterpriseAddress != null">
            AND enterprise_address = #{data.enterpriseAddress}
        </if>
        <if test="data.businessLicenseNo != null">
            AND business_license_no = #{data.businessLicenseNo}
        </if>
        <if test="data.legalRepresentative != null">
            AND legal_representative = #{data.legalRepresentative}
        </if>
        <if test="data.linkman != null">
            AND linkman = #{data.linkman}
        </if>
        <if test="data.linkmanEmail != null">
            AND linkman_email = #{data.linkmanEmail}
        </if>
        <if test="data.cellPhoneNumber != null">
            AND cell_phone_number = #{data.cellPhoneNumber}
        </if>
        <if test="data.landlineTelephone != null">
            AND landline_telephone = #{data.landlineTelephone}
        </if>
        <if test="ins != null and ins != ''">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null and notIns != ''">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} != #{item.value}
            </foreach>
        </if>
        <if test="lts != null and lts != ''">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null and gts != ''">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null and ltes != ''">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null and gtes != ''">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null and ranges != ''">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantDO">
    insert into sc_merchant
    (
        <include refid="merchantDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="merchantDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantDO">
    update sc_merchant
    <include refid="merchantDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantDO">
    update sc_merchant
    <set>
        gmt_modified = now(),
        <if test="update.name != null">
            name = #{update.name},
        </if>
        <if test="update.state != null">
            state = #{update.state},
        </if>
        <if test="update.merchantAccountId != null">
            merchant_account_id = #{update.merchantAccountId},
        </if>
        <if test="update.createBy != null">
            create_by = #{update.createBy},
        </if>
        <if test="update.modifiedBy != null">
            modified_by = #{update.modifiedBy},
        </if>
        <if test="update.enterpriseName != null">
            enterprise_name = #{update.enterpriseName},
        </if>
        <if test="update.enterpriseAddress != null">
            enterprise_address = #{update.enterpriseAddress},
        </if>
        <if test="update.businessLicenseNo != null">
            business_license_no = #{update.businessLicenseNo},
        </if>
        <if test="update.legalRepresentative != null">
            legal_representative = #{update.legalRepresentative},
        </if>
        <if test="update.linkman != null">
            linkman = #{update.linkman},
        </if>
        <if test="update.linkmanEmail != null">
            linkman_email = #{update.linkmanEmail},
        </if>
        <if test="update.cellPhoneNumber != null">
            cell_phone_number = #{update.cellPhoneNumber},
        </if>
        <if test="update.landlineTelephone != null">
            landline_telephone = #{update.landlineTelephone},
        </if>
    </set>
    <include refid="merchantDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantDO">
    insert into sc_merchant
    (
        <include refid="merchantDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="merchantDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    ,is_delete = 0
    <if test="name != null">
        ,name = #{name}
    </if>
    <if test="state != null">
        ,state = #{state}
    </if>
    <if test="merchantAccountId != null">
        ,merchant_account_id = #{merchantAccountId}
    </if>
    <if test="createBy != null">
        ,create_by = #{createBy}
    </if>
    <if test="modifiedBy != null">
        ,modified_by = #{modifiedBy}
    </if>
    <if test="enterpriseName != null">
        ,enterprise_name = #{enterpriseName}
    </if>
    <if test="enterpriseAddress != null">
        ,enterprise_address = #{enterpriseAddress}
    </if>
    <if test="businessLicenseNo != null">
        ,business_license_no = #{businessLicenseNo}
    </if>
    <if test="legalRepresentative != null">
        ,legal_representative = #{legalRepresentative}
    </if>
    <if test="linkman != null">
        ,linkman = #{linkman}
    </if>
    <if test="linkmanEmail != null">
        ,linkman_email = #{linkmanEmail}
    </if>
    <if test="cellPhoneNumber != null">
        ,cell_phone_number = #{cellPhoneNumber}
    </if>
    <if test="landlineTelephone != null">
        ,landline_telephone = #{landlineTelephone}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update sc_merchant
    set is_delete = 1, gmt_modified = now()
    <include refid="merchantDO_query_segment"/>
</update>
<update id="deleteById">
    update sc_merchant
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="merchantDO_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="merchantDO_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="merchantDOResult" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantDO">
    <include refid="merchantDO_selector"/>
    <include refid="merchantDO_query_segment"/>
    <include refid="merchantDO_groupBy"/>
    <include refid="merchantDO_orderby"/>
</select>

<select id="query4Page" resultMap="merchantDOResult" parameterType="com.sfebiz.supplychain.persistence.base.merchant.domain.MerchantDO">
    <include refid="merchantDO_selector"/>
    <include refid="merchantDO_query_segment"/>
    <include refid="merchantDO_groupBy"/>
    <include refid="merchantDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM sc_merchant
    <include refid="merchantDO_query_segment"/>
</select>

<select id="getById" resultMap="merchantDOResult">
    <include refid="merchantDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="merchantDOResult">
    <include refid="merchantDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

</mapper>
