<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sfebiz.supplychain.persistence.base.stockin.dao.StockinOrderFileDao">

<resultMap id="stockinOrderFileDOResult" type="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderFileDO">
    <result column="file_name" property="fileName"/>
    <result column="user_name" property="userName"/>
    <result column="stockin_order_id" property="stockinOrderId"/>
    <result column="user_id" property="userId"/>
    <result column="url" property="url"/>
    <result column="id" property="id"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="gmt_modified" property="gmtModified"/>
</resultMap>

<sql id="stockinOrderFileDO_columns">
    file_name,
    user_name,
    stockin_order_id,
    user_id,
    url,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="stockinOrderFileDO_sqlForInsert">
    file_name,
    user_name,
    stockin_order_id,
    user_id,
    url,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="stockinOrderFileDO_columnsForInsert">
    #{fileName},
    #{userName},
    #{stockinOrderId},
    #{userId},
    #{url},
    #{id},
    now(),
    now()
</sql>

<sql id="stockinOrderFileDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="fileName != null">
            file_name = #{fileName},
        </if>
        <if test="userName != null">
            user_name = #{userName},
        </if>
        <if test="stockinOrderId != null">
            stockin_order_id = #{stockinOrderId},
        </if>
        <if test="userId != null">
            user_id = #{userId},
        </if>
        <if test="url != null">
            url = #{url},
        </if>
    </set>
</sql>

<sql id="stockinOrderFileDO_selector">
    select
    <include refid="stockinOrderFileDO_columns"/>
    from sc_stockin_order_file
</sql>

<sql id="stockinOrderFileDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.fileName != null">
            AND file_name = #{data.fileName}
        </if>
        <if test="data.userName != null">
            AND user_name = #{data.userName}
        </if>
        <if test="data.stockinOrderId != null">
            AND stockin_order_id = #{data.stockinOrderId}
        </if>
        <if test="data.userId != null">
            AND user_id = #{data.userId}
        </if>
        <if test="data.url != null">
            AND url = #{data.url}
        </if>
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="ins != null and ins != ''">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null and notIns != ''">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="lts != null and lts != ''">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null and gts != ''">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null and ltes != ''">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null and gtes != ''">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null and ranges != ''">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderFileDO">
    insert into sc_stockin_order_file
    (
        <include refid="stockinOrderFileDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="stockinOrderFileDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderFileDO">
    update sc_stockin_order_file
    <include refid="stockinOrderFileDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderFileDO">
    update sc_stockin_order_file
    <set>
        gmt_modified = now(),
        <if test="update.fileName != null">
            file_name = #{update.fileName},
        </if>
        <if test="update.userName != null">
            user_name = #{update.userName},
        </if>
        <if test="update.stockinOrderId != null">
            stockin_order_id = #{update.stockinOrderId},
        </if>
        <if test="update.userId != null">
            user_id = #{update.userId},
        </if>
        <if test="update.url != null">
            url = #{update.url},
        </if>
    </set>
    <include refid="stockinOrderFileDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderFileDO">
    insert into sc_stockin_order_file
    (
        <include refid="stockinOrderFileDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="stockinOrderFileDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    ,is_delete = 0
    <if test="fileName != null">
        ,file_name = #{fileName}
    </if>
    <if test="userName != null">
        ,user_name = #{userName}
    </if>
    <if test="stockinOrderId != null">
        ,stockin_order_id = #{stockinOrderId}
    </if>
    <if test="userId != null">
        ,user_id = #{userId}
    </if>
    <if test="url != null">
        ,url = #{url}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update sc_stockin_order_file
    set is_delete = 1, gmt_modified = now()
    <include refid="stockinOrderFileDO_query_segment"/>
</update>
<update id="deleteById">
    update sc_stockin_order_file
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="stockinOrderFileDO_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="stockinOrderFileDO_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="stockinOrderFileDOResult" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderFileDO">
    <include refid="stockinOrderFileDO_selector"/>
    <include refid="stockinOrderFileDO_query_segment"/>
    <include refid="stockinOrderFileDO_groupBy"/>
    <include refid="stockinOrderFileDO_orderby"/>
</select>

<select id="query4Page" resultMap="stockinOrderFileDOResult" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderFileDO">
    <include refid="stockinOrderFileDO_selector"/>
    <include refid="stockinOrderFileDO_query_segment"/>
    <include refid="stockinOrderFileDO_groupBy"/>
    <include refid="stockinOrderFileDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM sc_stockin_order_file
    <include refid="stockinOrderFileDO_query_segment"/>
</select>

<select id="getById" resultMap="stockinOrderFileDOResult">
    <include refid="stockinOrderFileDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="stockinOrderFileDOResult">
    <include refid="stockinOrderFileDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

</mapper>
