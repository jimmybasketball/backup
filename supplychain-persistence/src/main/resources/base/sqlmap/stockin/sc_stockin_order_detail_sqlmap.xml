<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sfebiz.supplychain.persistence.base.stockin.dao.StockinOrderDetailDao">

<resultMap id="stockinOrderDetailDOResult" type="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderDetailDO">
    <result column="stockin_order_id" property="stockinOrderId"/>
    <result column="batch_generate_plan" property="batchGeneratePlan"/>
    <result column="sku_foreign_name" property="skuForeignName"/>
    <result column="sku_specification" property="skuSpecification"/>
    <result column="bad_return_count" property="badReturnCount"/>
    <result column="production_date" property="productionDate"/>
    <result column="expiration_date" property="expirationDate"/>
    <result column="sku_id" property="skuId"/>
    <result column="sku_name" property="skuName"/>
    <result column="sku_batch" property="skuBatch"/>
    <result column="origin_batch" property="originBatch"/>
    <result column="sku_barcode" property="skuBarcode"/>
    <result column="count" property="count"/>
    <result column="return_count" property="returnCount"/>
    <result column="real_count" property="realCount"/>
    <result column="bad_real_count" property="badRealCount"/>
    <result column="real_diff_count" property="realDiffCount"/>
    <result column="diff_desc" property="diffDesc"/>
    <result column="operator" property="operator"/>
    <result column="stockin_date" property="stockinDate"/>
    <result column="id" property="id"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="gmt_modified" property="gmtModified"/>
</resultMap>

<sql id="stockinOrderDetailDO_columns">
    stockin_order_id,
    batch_generate_plan,
    sku_foreign_name,
    sku_specification,
    bad_return_count,
    production_date,
    expiration_date,
    sku_id,
    sku_name,
    sku_batch,
    origin_batch,
    sku_barcode,
    count,
    return_count,
    real_count,
    bad_real_count,
    real_diff_count,
    diff_desc,
    operator,
    stockin_date,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="stockinOrderDetailDO_sqlForInsert">
    stockin_order_id,
    batch_generate_plan,
    sku_foreign_name,
    sku_specification,
    bad_return_count,
    production_date,
    expiration_date,
    sku_id,
    sku_name,
    sku_batch,
    origin_batch,
    sku_barcode,
    count,
    return_count,
    real_count,
    bad_real_count,
    real_diff_count,
    diff_desc,
    operator,
    stockin_date,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="stockinOrderDetailDO_columnsForInsert">
    #{stockinOrderId},
    #{batchGeneratePlan},
    #{skuForeignName},
    #{skuSpecification},
    #{badReturnCount},
    #{productionDate},
    #{expirationDate},
    #{skuId},
    #{skuName},
    #{skuBatch},
    #{originBatch},
    #{skuBarcode},
    #{count},
    #{returnCount},
    #{realCount},
    #{badRealCount},
    #{realDiffCount},
    #{diffDesc},
    #{operator},
    #{stockinDate},
    #{id},
    now(),
    now()
</sql>

<sql id="stockinOrderDetailDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="stockinOrderId != null">
            stockin_order_id = #{stockinOrderId},
        </if>
        <if test="batchGeneratePlan != null">
            batch_generate_plan = #{batchGeneratePlan},
        </if>
        <if test="skuForeignName != null">
            sku_foreign_name = #{skuForeignName},
        </if>
        <if test="skuSpecification != null">
            sku_specification = #{skuSpecification},
        </if>
        <if test="badReturnCount != null">
            bad_return_count = #{badReturnCount},
        </if>
        <if test="productionDate != null">
            production_date = #{productionDate},
        </if>
        <if test="expirationDate != null">
            expiration_date = #{expirationDate},
        </if>
        <if test="skuId != null">
            sku_id = #{skuId},
        </if>
        <if test="skuName != null">
            sku_name = #{skuName},
        </if>
        <if test="skuBatch != null">
            sku_batch = #{skuBatch},
        </if>
        <if test="originBatch != null">
            origin_batch = #{originBatch},
        </if>
        <if test="skuBarcode != null">
            sku_barcode = #{skuBarcode},
        </if>
        <if test="count != null">
            count = #{count},
        </if>
        <if test="returnCount != null">
            return_count = #{returnCount},
        </if>
        <if test="realCount != null">
            real_count = #{realCount},
        </if>
        <if test="badRealCount != null">
            bad_real_count = #{badRealCount},
        </if>
        <if test="realDiffCount != null">
            real_diff_count = #{realDiffCount},
        </if>
        <if test="diffDesc != null">
            diff_desc = #{diffDesc},
        </if>
        <if test="operator != null">
            operator = #{operator},
        </if>
        <if test="stockinDate != null">
            stockin_date = #{stockinDate},
        </if>
    </set>
</sql>

<sql id="stockinOrderDetailDO_selector">
    select
    <include refid="stockinOrderDetailDO_columns"/>
    from sc_stockin_order_detail
</sql>

<sql id="stockinOrderDetailDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.stockinOrderId != null">
            AND stockin_order_id = #{data.stockinOrderId}
        </if>
        <if test="data.batchGeneratePlan != null">
            AND batch_generate_plan = #{data.batchGeneratePlan}
        </if>
        <if test="data.skuForeignName != null">
            AND sku_foreign_name = #{data.skuForeignName}
        </if>
        <if test="data.skuSpecification != null">
            AND sku_specification = #{data.skuSpecification}
        </if>
        <if test="data.badReturnCount != null">
            AND bad_return_count = #{data.badReturnCount}
        </if>
        <if test="data.productionDate != null">
            AND production_date = #{data.productionDate}
        </if>
        <if test="data.expirationDate != null">
            AND expiration_date = #{data.expirationDate}
        </if>
        <if test="data.skuId != null">
            AND sku_id = #{data.skuId}
        </if>
        <if test="data.skuName != null">
            AND sku_name = #{data.skuName}
        </if>
        <if test="data.skuBatch != null">
            AND sku_batch = #{data.skuBatch}
        </if>
        <if test="data.originBatch != null">
            AND origin_batch = #{data.originBatch}
        </if>
        <if test="data.skuBarcode != null">
            AND sku_barcode = #{data.skuBarcode}
        </if>
        <if test="data.count != null">
            AND count = #{data.count}
        </if>
        <if test="data.returnCount != null">
            AND return_count = #{data.returnCount}
        </if>
        <if test="data.realCount != null">
            AND real_count = #{data.realCount}
        </if>
        <if test="data.badRealCount != null">
            AND bad_real_count = #{data.badRealCount}
        </if>
        <if test="data.realDiffCount != null">
            AND real_diff_count = #{data.realDiffCount}
        </if>
        <if test="data.diffDesc != null">
            AND diff_desc = #{data.diffDesc}
        </if>
        <if test="data.operator != null">
            AND operator = #{data.operator}
        </if>
        <if test="data.stockinDate != null">
            AND stockin_date = #{data.stockinDate}
        </if>
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="ins != null and ins != ''">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null and notIns != ''">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="lts != null and lts != ''">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null and gts != ''">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null and ltes != ''">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null and gtes != ''">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null and ranges != ''">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderDetailDO">
    insert into sc_stockin_order_detail
    (
        <include refid="stockinOrderDetailDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="stockinOrderDetailDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderDetailDO">
    update sc_stockin_order_detail
    <include refid="stockinOrderDetailDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderDetailDO">
    update sc_stockin_order_detail
    <set>
        gmt_modified = now(),
        <if test="update.stockinOrderId != null">
            stockin_order_id = #{update.stockinOrderId},
        </if>
        <if test="update.batchGeneratePlan != null">
            batch_generate_plan = #{update.batchGeneratePlan},
        </if>
        <if test="update.skuForeignName != null">
            sku_foreign_name = #{update.skuForeignName},
        </if>
        <if test="update.skuSpecification != null">
            sku_specification = #{update.skuSpecification},
        </if>
        <if test="update.badReturnCount != null">
            bad_return_count = #{update.badReturnCount},
        </if>
        <if test="update.productionDate != null">
            production_date = #{update.productionDate},
        </if>
        <if test="update.expirationDate != null">
            expiration_date = #{update.expirationDate},
        </if>
        <if test="update.skuId != null">
            sku_id = #{update.skuId},
        </if>
        <if test="update.skuName != null">
            sku_name = #{update.skuName},
        </if>
        <if test="update.skuBatch != null">
            sku_batch = #{update.skuBatch},
        </if>
        <if test="update.originBatch != null">
            origin_batch = #{update.originBatch},
        </if>
        <if test="update.skuBarcode != null">
            sku_barcode = #{update.skuBarcode},
        </if>
        <if test="update.count != null">
            count = #{update.count},
        </if>
        <if test="update.returnCount != null">
            return_count = #{update.returnCount},
        </if>
        <if test="update.realCount != null">
            real_count = #{update.realCount},
        </if>
        <if test="update.badRealCount != null">
            bad_real_count = #{update.badRealCount},
        </if>
        <if test="update.realDiffCount != null">
            real_diff_count = #{update.realDiffCount},
        </if>
        <if test="update.diffDesc != null">
            diff_desc = #{update.diffDesc},
        </if>
        <if test="update.operator != null">
            operator = #{update.operator},
        </if>
        <if test="update.stockinDate != null">
            stockin_date = #{update.stockinDate},
        </if>
    </set>
    <include refid="stockinOrderDetailDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderDetailDO">
    insert into sc_stockin_order_detail
    (
        <include refid="stockinOrderDetailDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="stockinOrderDetailDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    ,is_delete = 0
    <if test="stockinOrderId != null">
        ,stockin_order_id = #{stockinOrderId}
    </if>
    <if test="batchGeneratePlan != null">
        ,batch_generate_plan = #{batchGeneratePlan}
    </if>
    <if test="skuForeignName != null">
        ,sku_foreign_name = #{skuForeignName}
    </if>
    <if test="skuSpecification != null">
        ,sku_specification = #{skuSpecification}
    </if>
    <if test="badReturnCount != null">
        ,bad_return_count = #{badReturnCount}
    </if>
    <if test="productionDate != null">
        ,production_date = #{productionDate}
    </if>
    <if test="expirationDate != null">
        ,expiration_date = #{expirationDate}
    </if>
    <if test="skuId != null">
        ,sku_id = #{skuId}
    </if>
    <if test="skuName != null">
        ,sku_name = #{skuName}
    </if>
    <if test="skuBatch != null">
        ,sku_batch = #{skuBatch}
    </if>
    <if test="originBatch != null">
        ,origin_batch = #{originBatch}
    </if>
    <if test="skuBarcode != null">
        ,sku_barcode = #{skuBarcode}
    </if>
    <if test="count != null">
        ,count = #{count}
    </if>
    <if test="returnCount != null">
        ,return_count = #{returnCount}
    </if>
    <if test="realCount != null">
        ,real_count = #{realCount}
    </if>
    <if test="badRealCount != null">
        ,bad_real_count = #{badRealCount}
    </if>
    <if test="realDiffCount != null">
        ,real_diff_count = #{realDiffCount}
    </if>
    <if test="diffDesc != null">
        ,diff_desc = #{diffDesc}
    </if>
    <if test="operator != null">
        ,operator = #{operator}
    </if>
    <if test="stockinDate != null">
        ,stockin_date = #{stockinDate}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update sc_stockin_order_detail
    set is_delete = 1, gmt_modified = now()
    <include refid="stockinOrderDetailDO_query_segment"/>
</update>
<update id="deleteById">
    update sc_stockin_order_detail
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="stockinOrderDetailDO_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="stockinOrderDetailDO_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="stockinOrderDetailDOResult" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderDetailDO">
    <include refid="stockinOrderDetailDO_selector"/>
    <include refid="stockinOrderDetailDO_query_segment"/>
    <include refid="stockinOrderDetailDO_groupBy"/>
    <include refid="stockinOrderDetailDO_orderby"/>
</select>

<select id="query4Page" resultMap="stockinOrderDetailDOResult" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderDetailDO">
    <include refid="stockinOrderDetailDO_selector"/>
    <include refid="stockinOrderDetailDO_query_segment"/>
    <include refid="stockinOrderDetailDO_groupBy"/>
    <include refid="stockinOrderDetailDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM sc_stockin_order_detail
    <include refid="stockinOrderDetailDO_query_segment"/>
</select>

<select id="getById" resultMap="stockinOrderDetailDOResult">
    <include refid="stockinOrderDetailDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="stockinOrderDetailDOResult">
    <include refid="stockinOrderDetailDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

    <update id="updateByBarcodeAndSkuId" parameterType="com.sfebiz.supplychain.persistence.base.stockin.domain.StockinOrderDetailDO">
        update sc_stockin_order_detail
        <include refid="stockinOrderDetailDO_setterForUpdate"/>
        where sku_id = #{skuId}
        and stockin_order_id = ${stockinOrderId}
        and is_delete = 0
    </update>
</mapper>
