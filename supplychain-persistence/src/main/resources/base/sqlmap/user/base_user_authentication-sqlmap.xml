<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sfebiz.supplychain.persistence.base.stockout.dao.StockoutOrderBuyerDao">

<resultMap id="stockoutOrderBuyerDOResult" type="com.sfebiz.supplychain.persistence.base.stockout.domain.StockoutOrderBuyerDO">
    <result column="buyer_cert_type" property="buyerCertType"/>
    <result column="buyer_cert_no" property="buyerCertNo"/>
    <result column="buyer_id_card_front_photo_url" property="buyerIdCardFrontPhotoUrl"/>
    <result column="buyer_telephone" property="buyerTelephone"/>
    <result column="stockout_order_id" property="stockoutOrderId"/>
    <result column="biz_id" property="bizId"/>
    <result column="buyer_name" property="buyerName"/>
    <result column="buyer_city" property="buyerCity"/>
    <result column="buyer_province" property="buyerProvince"/>
    <result column="buyer_country" property="buyerCountry"/>
    <result column="buyer_id_card_photo_timestamp" property="buyerIdCardPhotoTimestamp"/>
    <result column="buyer_address" property="buyerAddress"/>
    <result column="buyer_id_card_back_photo_url" property="buyerIdCardBackPhotoUrl"/>
    <result column="buyer_region" property="buyerRegion"/>
    <result column="buyer_zipcode" property="buyerZipcode"/>
    <result column="id" property="id"/>
    <result column="gmt_create" property="gmtCreate"/>
    <result column="gmt_modified" property="gmtModified"/>
</resultMap>

<sql id="stockoutOrderBuyerDO_columns">
    buyer_cert_type,
    buyer_cert_no,
    buyer_id_card_front_photo_url,
    buyer_telephone,
    stockout_order_id,
    biz_id,
    buyer_name,
    buyer_city,
    buyer_province,
    buyer_country,
    buyer_id_card_photo_timestamp,
    buyer_address,
    buyer_id_card_back_photo_url,
    buyer_region,
    buyer_zipcode,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="stockoutOrderBuyerDO_sqlForInsert">
    buyer_cert_type,
    buyer_cert_no,
    buyer_id_card_front_photo_url,
    buyer_telephone,
    stockout_order_id,
    biz_id,
    buyer_name,
    buyer_city,
    buyer_province,
    buyer_country,
    buyer_id_card_photo_timestamp,
    buyer_address,
    buyer_id_card_back_photo_url,
    buyer_region,
    buyer_zipcode,
    id,
    gmt_create,
    gmt_modified
</sql>

<sql id="stockoutOrderBuyerDO_columnsForInsert">
    #{buyerCertType},
    #{buyerCertNo},
    #{buyerIdCardFrontPhotoUrl},
    #{buyerTelephone},
    #{stockoutOrderId},
    #{bizId},
    #{buyerName},
    #{buyerCity},
    #{buyerProvince},
    #{buyerCountry},
    #{buyerIdCardPhotoTimestamp},
    #{buyerAddress},
    #{buyerIdCardBackPhotoUrl},
    #{buyerRegion},
    #{buyerZipcode},
    #{id},
    now(),
    now()
</sql>

<sql id="stockoutOrderBuyerDO_setterForUpdate">
    <set>
        gmt_modified = now(),
        <if test="buyerCertType != null">
            buyer_cert_type = #{buyerCertType},
        </if>
        <if test="buyerCertNo != null">
            buyer_cert_no = #{buyerCertNo},
        </if>
        <if test="buyerIdCardFrontPhotoUrl != null">
            buyer_id_card_front_photo_url = #{buyerIdCardFrontPhotoUrl},
        </if>
        <if test="buyerTelephone != null">
            buyer_telephone = #{buyerTelephone},
        </if>
        <if test="stockoutOrderId != null">
            stockout_order_id = #{stockoutOrderId},
        </if>
        <if test="bizId != null">
            biz_id = #{bizId},
        </if>
        <if test="buyerName != null">
            buyer_name = #{buyerName},
        </if>
        <if test="buyerCity != null">
            buyer_city = #{buyerCity},
        </if>
        <if test="buyerProvince != null">
            buyer_province = #{buyerProvince},
        </if>
        <if test="buyerCountry != null">
            buyer_country = #{buyerCountry},
        </if>
        <if test="buyerIdCardPhotoTimestamp != null">
            buyer_id_card_photo_timestamp = #{buyerIdCardPhotoTimestamp},
        </if>
        <if test="buyerAddress != null">
            buyer_address = #{buyerAddress},
        </if>
        <if test="buyerIdCardBackPhotoUrl != null">
            buyer_id_card_back_photo_url = #{buyerIdCardBackPhotoUrl},
        </if>
        <if test="buyerRegion != null">
            buyer_region = #{buyerRegion},
        </if>
        <if test="buyerZipcode != null">
            buyer_zipcode = #{buyerZipcode},
        </if>
    </set>
</sql>

<sql id="stockoutOrderBuyerDO_selector">
    select
    <include refid="stockoutOrderBuyerDO_columns"/>
    from base_user_authentication
</sql>

<sql id="stockoutOrderBuyerDO_query_segment">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="data.buyerCertType != null">
            AND buyer_cert_type = #{data.buyerCertType}
        </if>
        <if test="data.buyerCertNo != null">
            AND buyer_cert_no = #{data.buyerCertNo}
        </if>
        <if test="data.buyerIdCardFrontPhotoUrl != null">
            AND buyer_id_card_front_photo_url = #{data.buyerIdCardFrontPhotoUrl}
        </if>
        <if test="data.buyerTelephone != null">
            AND buyer_telephone = #{data.buyerTelephone}
        </if>
        <if test="data.stockoutOrderId != null">
            AND stockout_order_id = #{data.stockoutOrderId}
        </if>
        <if test="data.bizId != null">
            AND biz_id = #{data.bizId}
        </if>
        <if test="data.buyerName != null">
            AND buyer_name = #{data.buyerName}
        </if>
        <if test="data.buyerCity != null">
            AND buyer_city = #{data.buyerCity}
        </if>
        <if test="data.buyerProvince != null">
            AND buyer_province = #{data.buyerProvince}
        </if>
        <if test="data.buyerCountry != null">
            AND buyer_country = #{data.buyerCountry}
        </if>
        <if test="data.buyerIdCardPhotoTimestamp != null">
            AND buyer_id_card_photo_timestamp = #{data.buyerIdCardPhotoTimestamp}
        </if>
        <if test="data.buyerAddress != null">
            AND buyer_address = #{data.buyerAddress}
        </if>
        <if test="data.buyerIdCardBackPhotoUrl != null">
            AND buyer_id_card_back_photo_url = #{data.buyerIdCardBackPhotoUrl}
        </if>
        <if test="data.buyerRegion != null">
            AND buyer_region = #{data.buyerRegion}
        </if>
        <if test="data.buyerZipcode != null">
            AND buyer_zipcode = #{data.buyerZipcode}
        </if>
        <if test="data.id != null">
            AND id = #{data.id}
        </if>
        <if test="data.gmtCreate != null">
            AND gmt_create = #{data.gmtCreate}
        </if>
        <if test="data.gmtModified != null">
            AND gmt_modified = #{data.gmtModified}
        </if>
        <if test="ins != null and ins != ''">
            AND
            <foreach collection="ins" item="item" open="(" separator="and" close=")">
                ${item.column} in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="notIns != null and notIns != ''">
            AND
            <foreach collection="notIns" item="item" open="(" separator="and" close=")">
                ${item.column} not in
                <foreach collection="item.values" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </foreach>
        </if>
        <if test="equals != null and equals != ''">
            AND
            <foreach collection="equals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="notEquals != null and notEquals != ''">
            AND
            <foreach collection="notEquals" item="item" open="(" separator="and" close=")">
                ${item.column} = #{item.value}
            </foreach>
        </if>
        <if test="lts != null and lts != ''">
            AND
            <foreach collection="lts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ < ]]> #{item.value}
            </foreach>
        </if>
        <if test="gts != null and gts != ''">
            AND
            <foreach collection="gts" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ > ]]> #{item.value}
            </foreach>
        </if>
        <if test="likes != null and likes != ''">
            AND
            <foreach collection="likes" item="item" open="(" separator="and" close=")">
                ${item.column} like concat('%', #{item.value}, '%')
            </foreach>
        </if>
        <if test="ltes != null and ltes != ''">
            AND
            <foreach collection="ltes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ <= ]]> #{item.value}
            </foreach>
        </if>
        <if test="gtes != null and gtes != ''">
            AND
            <foreach collection="gtes" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.value}
            </foreach>
        </if>
        <if test="ranges != null and ranges != ''">
            AND
            <foreach collection="ranges" item="item" open="(" separator="and" close=")">
                ${item.column} <![CDATA[ >= ]]> #{item.from} and ${item.column} <![CDATA[ < ]]> #{item.to}
            </foreach>
        </if>
        AND is_delete = 0
    </trim>
</sql>


<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.stockout.domain.StockoutOrderBuyerDO">
    insert into base_user_authentication
    (
        <include refid="stockoutOrderBuyerDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="stockoutOrderBuyerDO_columnsForInsert"/>
        ,0
    )
</insert>

<update id="update" parameterType="com.sfebiz.supplychain.persistence.base.stockout.domain.StockoutOrderBuyerDO">
    update base_user_authentication
    <include refid="stockoutOrderBuyerDO_setterForUpdate" />
    where id = #{id}
    and is_delete = 0
</update>


<update id="updateByQuery" parameterType="com.sfebiz.supplychain.persistence.base.stockout.domain.StockoutOrderBuyerDO">
    update base_user_authentication
    <set>
        gmt_modified = now(),
        <if test="update.buyerCertType != null">
            buyer_cert_type = #{update.buyerCertType},
        </if>
        <if test="update.buyerCertNo != null">
            buyer_cert_no = #{update.buyerCertNo},
        </if>
        <if test="update.buyerIdCardFrontPhotoUrl != null">
            buyer_id_card_front_photo_url = #{update.buyerIdCardFrontPhotoUrl},
        </if>
        <if test="update.buyerTelephone != null">
            buyer_telephone = #{update.buyerTelephone},
        </if>
        <if test="update.stockoutOrderId != null">
            stockout_order_id = #{update.stockoutOrderId},
        </if>
        <if test="update.bizId != null">
            biz_id = #{update.bizId},
        </if>
        <if test="update.buyerName != null">
            buyer_name = #{update.buyerName},
        </if>
        <if test="update.buyerCity != null">
            buyer_city = #{update.buyerCity},
        </if>
        <if test="update.buyerProvince != null">
            buyer_province = #{update.buyerProvince},
        </if>
        <if test="update.buyerCountry != null">
            buyer_country = #{update.buyerCountry},
        </if>
        <if test="update.buyerIdCardPhotoTimestamp != null">
            buyer_id_card_photo_timestamp = #{update.buyerIdCardPhotoTimestamp},
        </if>
        <if test="update.buyerAddress != null">
            buyer_address = #{update.buyerAddress},
        </if>
        <if test="update.buyerIdCardBackPhotoUrl != null">
            buyer_id_card_back_photo_url = #{update.buyerIdCardBackPhotoUrl},
        </if>
        <if test="update.buyerRegion != null">
            buyer_region = #{update.buyerRegion},
        </if>
        <if test="update.buyerZipcode != null">
            buyer_zipcode = #{update.buyerZipcode},
        </if>
    </set>
    <include refid="stockoutOrderBuyerDO_query_segment"/>
</update>


<insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="com.sfebiz.supplychain.persistence.base.stockout.domain.StockoutOrderBuyerDO">
    insert into base_user_authentication
    (
        <include refid="stockoutOrderBuyerDO_sqlForInsert"/>
        ,is_delete
    )
    values
    (
        <include refid="stockoutOrderBuyerDO_columnsForInsert"/>
        ,0
    )
    on duplicate key update
    gmt_modified = now()
    ,is_delete = 0
    <if test="buyerCertType != null">
        ,buyer_cert_type = #{buyerCertType}
    </if>
    <if test="buyerCertNo != null">
        ,buyer_cert_no = #{buyerCertNo}
    </if>
    <if test="buyerIdCardFrontPhotoUrl != null">
        ,buyer_id_card_front_photo_url = #{buyerIdCardFrontPhotoUrl}
    </if>
    <if test="buyerTelephone != null">
        ,buyer_telephone = #{buyerTelephone}
    </if>
    <if test="stockoutOrderId != null">
        ,stockout_order_id = #{stockoutOrderId}
    </if>
    <if test="bizId != null">
        ,biz_id = #{bizId}
    </if>
    <if test="buyerName != null">
        ,buyer_name = #{buyerName}
    </if>
    <if test="buyerCity != null">
        ,buyer_city = #{buyerCity}
    </if>
    <if test="buyerProvince != null">
        ,buyer_province = #{buyerProvince}
    </if>
    <if test="buyerCountry != null">
        ,buyer_country = #{buyerCountry}
    </if>
    <if test="buyerIdCardPhotoTimestamp != null">
        ,buyer_id_card_photo_timestamp = #{buyerIdCardPhotoTimestamp}
    </if>
    <if test="buyerAddress != null">
        ,buyer_address = #{buyerAddress}
    </if>
    <if test="buyerIdCardBackPhotoUrl != null">
        ,buyer_id_card_back_photo_url = #{buyerIdCardBackPhotoUrl}
    </if>
    <if test="buyerRegion != null">
        ,buyer_region = #{buyerRegion}
    </if>
    <if test="buyerZipcode != null">
        ,buyer_zipcode = #{buyerZipcode}
    </if>
</insert>

<!-- Delete -->
<update id="delete">
    update base_user_authentication
    set is_delete = 1, gmt_modified = now()
    <include refid="stockoutOrderBuyerDO_query_segment"/>
</update>
<update id="deleteById">
    update base_user_authentication
    set is_delete = 1, gmt_modified = now()
    where id = #{id}
</update>





<!-- query class -->
<sql id="stockoutOrderBuyerDO_groupBy">
    <if test="groupBys != null and groupBys != ''">
        group by
        <foreach collection="groupBys" item="item" open="" separator="," close="">
            #{item}
        </foreach>
    </if>
</sql>

<sql id="stockoutOrderBuyerDO_orderby">
    <if test="orderBys != null and orderBys != ''">
        order by
        <foreach collection="orderBys" item="item" open="" separator="," close="">
            ${item.column} ${item.direction}
        </foreach>
    </if>
</sql>


<select id="query" resultMap="stockoutOrderBuyerDOResult" parameterType="com.sfebiz.supplychain.persistence.base.stockout.domain.StockoutOrderBuyerDO">
    <include refid="stockoutOrderBuyerDO_selector"/>
    <include refid="stockoutOrderBuyerDO_query_segment"/>
    <include refid="stockoutOrderBuyerDO_groupBy"/>
    <include refid="stockoutOrderBuyerDO_orderby"/>
</select>

<select id="query4Page" resultMap="stockoutOrderBuyerDOResult" parameterType="com.sfebiz.supplychain.persistence.base.stockout.domain.StockoutOrderBuyerDO">
    <include refid="stockoutOrderBuyerDO_selector"/>
    <include refid="stockoutOrderBuyerDO_query_segment"/>
    <include refid="stockoutOrderBuyerDO_groupBy"/>
    <include refid="stockoutOrderBuyerDO_orderby"/>
    limit ${startRowForMysql}, ${pageSize}
</select>


<select id="count" resultType="java.lang.Long">
    SELECT COUNT(1) FROM base_user_authentication
    <include refid="stockoutOrderBuyerDO_query_segment"/>
</select>

<select id="getById" resultMap="stockoutOrderBuyerDOResult">
    <include refid="stockoutOrderBuyerDO_selector"/>
    where id = #{id}
    and is_delete = 0
</select>

<select id="getByIdForUpdate" resultMap="stockoutOrderBuyerDOResult">
    <include refid="stockoutOrderBuyerDO_selector"/>
    where id = #{id}
    and is_delete = 0
    for update
</select>

</mapper>
